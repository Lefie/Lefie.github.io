/*
0 : default 
1 : market
2 : shop 
3 : study 
*/

//sound
let bgMusic
let door
let bg
let bunny_noise
let chicken_noise
let cow_noise
let goat_noise
let pig_noise
let sheep_noise



//
let farm

let catIdle
let catRun
let catJump
let cat
let cat2
let cat3



let gameState = 0;

let focusPoints = 100

//study room variables
let inp
let btn
let p
let value
let ogValue
let pressed = false
let finished = false
let hasStarted = false
let success = false

//animals 
let bunny
let chicken
let cow
let goat
let pig
let sheep

let spriteBunny
let spriteChicken
let spriteCow
let spriteGoat
let spritePig
let spriteSheep
let count = 0


//market
let marketImg
let isClicked = false
let bunnyIsClicked = false
let chickenIsClicked = false
let cowIsClicked = false
let goatIsClicked = false
let pigIsClicked = false
let sheepIsClicked  = false
let price // bunny and chicken use this
let price2 //cow and goat
let price3 // pig and sheep

let isMouseClicked = false;

let myFarmAnimals = []


const TILESIZE = 16

let level1 = [
[888,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,890],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,5329,5329,5329,5329,593,593,593,593,593,593,593,593,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,5329,5329,5329,5329,593,593,593,593,593,593,593,593,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,5329,5329,5329,5329,593,593,593,593,593,593,593,593,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,5329,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,5329,5329,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,5329,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,5329,5329,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,5329,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,5329,5329,5329,5329,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,1037,1037,1038],
[1036,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1037,1038],
[1184,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1185,1186]

]


let level2 = [
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,9236,9237,9238,9239,9240,9241,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,9384,9385,9386,9387,9388,9389,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,9532,9533,9534,9535,9536,9537,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,3855,3855,3855,3855,3855,3855,3855,3855,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,9680,9681,9682,9683,9684,9685,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,-1,-1,-1,351,352,4152,4152,4152,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,9828,9829,9830,9831,9832,9833,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,-1,-1,498,499,500,501,4154,4154,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,4153,4150,646,647,648,649,-1,-1,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,4150,4150,794,795,796,797,-1,-1,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,-1,-1,942,943,944,945,-1,-1,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,-1,-1,-1,-1,-1,-1,-1,-1,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3852,3853,3852,3853,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3855,3855,3855,-1,-1,-1,-1,3855,3855,3855,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4000,4001,4000,4001,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4148,4149,4148,4149,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4316,4316,4316,4316,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4169,4169,4169,4169,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3852,3853,3852,3853,3852,3853,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4000,4001,4000,4001,4000,4001,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4148,4149,4148,4149,4148,4149,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,4169,4169,4169,4169,4169,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4314,4314,4314,4314,4314,4314,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,4169,-1,-1,-1,4169,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4314,-1,-1,-1,-1,4314,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,4169,-1,-1,-1,4169,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4314,-1,-1,-1,-1,4314,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,4169,-1,-1,-1,4169,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4314,-1,-1,-1,-1,4314,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]

]

let level_study = [
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,2083,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,2083,2083,2083,2083,2083,2083,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,2083,2083,1936,2083,2083,2083,2083,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,2083,2083,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,2083,2083,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,1936,1936,1936,1936,1936,2083,1936,1936,2083,2083,2083,2083,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,1936,1936,1936,1936,1936,2083,1936,1936,1936,2083,2083,1936,1936,1936,1936,2083,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,1936,1936,1950,1950,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1790,1791,1791,1791,1791,1791,1791,1791,1791,1791,1791,1791,1791,1791,1791,1792,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1940,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,1936,1936,1936,1936,1936,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,2083,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044,1044],
[1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193,1193],
[2083,2083,1936,1936,1936,2083,2083,1936,1950,1936,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[2083,2083,1936,1936,1936,2083,2083,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,2083,2083,1936,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1938,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1939,1926,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,2086,2087,2087,2087,2087,2087,2087,2087,2087,2087,2087,2087,2087,2087,2087,2074,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,1936,1936,1936,1936,1936,2083,1936,1936,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],
[1936,1936,1936,2083,2083,1936,1936,1936,2083,2083,2083,2083,2083,2083,2083,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936,1936],

]



function preload(){

    //farm = loadImage("/catFarm/imgs/full version/global.png")
    farm = loadImage("imgs/full version/global.png") 
    catIdle = loadImage("imgs/catset_assets/catset_gifs/cat05_gifs/cat05_idle_blink_8fps.gif")
    catRun = loadImage("imgs/catset_assets/catset_gifs/cat05_gifs/cat05_run_12fps.gif")
    catJump = loadImage("imgs/catset_assets/catset_gifs/cat05_gifs/cat05_jump_12fps.gif")
    bunny = loadImage("imgs/full version/animals/bunny_animations.png")
    chicken = loadImage("imgs/full version/animals/chicken animation.png")
    cow = loadImage("imgs/full version/animals/cow animation.png")
    goat = loadImage("imgs/full version/animals/goat animation.png")
    pig = loadImage("imgs/full version/animals/pig animation.png")
    sheep = loadImage("imgs/full version/animals/sheep animation.png")
    marketImg = loadImage("imgs/exported/market.png")
    bgMusic = loadSound("sound/bg.mp3")
    door = loadSound("sound/door.mp3")
    bunny_noise = loadSound("sound/bunny.mp3")
    chicken_noise = loadSound("sound/chicken.mp3")
    cow_noise = loadSound("sound/cow.mp3")
    goat_noise = loadSound("sound/goat.mp3")
    pig_noise = loadSound("sound/pig.mp3")
    sheep_noise = loadSound("sound/sheep.mp3")
  }

function setup(){

    let c = createCanvas(800,480)
    c.parent("#container")
    
    cat = new Cat(320, 200,50,50)
    cat2 = new Cat(0,210,50,50)
    cat3 = new Cat(320,300,50,50)
    spriteBunny = new Sprite(bunny)
    spriteChicken = new Sprite(chicken)
    spriteCow = new Sprite(cow)
    spriteGoat = new Sprite(goat)
    spritePig = new Sprite(pig)
    spriteSheep = new Sprite(sheep)
    price = new Price(150,150,"bunny")
    price2 = new Price(150,150,"cow")
    price3 = new Price(150,150,"pig")

    inp = createInput('')
    btn = createButton('Submit')
    p = createP("Enter how long you'd like to study(mins)")

    inp.hide()
    btn.hide()
    p.hide()
    noStroke()
    bgMusic.play()
   
    
   

}

function draw(){
    background(128)
    if(gameState === 0){
        
        imageMode(CORNER)
        drawLevel(level1)
        drawLevel(level2)

        for(let i = 0; i < myFarmAnimals.length; i++){
            myFarmAnimals[i].moveRandomly();
        }
        textSize(15)
       
        // spriteBunny.moveRandomly()
        // spriteChicken.moveRandomly()
        // spriteCow.moveRandomly()
        // spriteGoat.moveRandomly()
        // spritePig.moveRandomly()
        // spriteSheep.moveRandomly()

        text("focus points: "+focusPoints,30,30)
        fill("white")
        ellipseMode(CENTER)
        //ellipse(cat.x + 25,cat.y + 30,30,30)
        cat.display()
        cat.move() 
        
        let room = transition(cat.middleX + 15, cat.sensorTop + 15, level2)
        if( room === "studyRoom" ){
            door.play()
            gameState = 1
            cat.x = 10
        }

        if(room === "marketPl"){
            door.play()
            gameState = 2
            cat.x = 10
        }
    }

    if(gameState === 1){
        imageMode(CORNER)
        drawLevel(level_study)
        textSize(15)
        text("focus points: "+focusPoints,30,30)
        
        cat2.display()
        cat2.move2()

        let isInFocusArea = cat2.isInStudyArea()
        if(isInFocusArea){
            inp.show()
            btn.show()
            p.show()
            textSize(15)
           
            p.position(width/2 + 200,200)
            inp.position(width/2 + 300,250)
            btn.position(width/2 + 360,290)
            
            btn.mousePressed(()=>{
                submitMins()
                
                pressed = true
            })
    
            
            if(pressed){
                inp.hide()
                btn.hide()
                p.hide()
                fill("white")
                rectMode(CENTER)
                rect(400,280,50,50)
                cat2.display()
                cat2.move()
                fill("black")
                textSize(15)
                text("start",380,280)
                
                
                //text("distance "+dist(cat2.x, cat2.y,400,280),400,150)
                if(dist(cat2.x, cat2.y,400,280) < 45 ){
                    fill("white")
                    rect(400,80,100,80)
                    fill("black")
                    hasStarted = true
                    
                    text(floor(value/60) + " : ",370,90)
                    text(value%60,400,90)
                
                    //timer begins
                    if(frameCount % 60 === 0 && value > 0){
                        value -= 1
                    }
                   
                }else{
                    if(hasStarted == true){
                        text("study session has been broken.",400,150)
                        pressed = false
                        finished = true
                        hasStarted = false

                    }
                }

                if(value === 0){
                    pressed = false
                    finished = true
                    hasStarted = false
                    success = true;
                }
            }

            if (finished == true && success == true){
                focusPoints += map(ogValue,1,60,10,100)
                finished = false
                success = false
            }

        }else{
            inp.hide()
            btn.hide()
            p.hide()
        }
        
        
    }

    if(gameState === 2){
        
        changeMusic()
        imageMode(CORNER)
        image(marketImg,0,0)
        textSize(15)
        text("focus points: "+focusPoints,30,30)
      
        
        let bunnyObj = spriteBunny.display()
        let cowObj = spriteCow.display()
        let chickenObj = spriteChicken.display()
        let goatObj = spriteGoat.display()
        let pigObj = spritePig.display()
        let sheepObj = spriteSheep.display()
        image(bunnyObj[0][0],350,190,25,25)
        image(chickenObj[0][0],380,190,25,25)
        image(cowObj[0][0],410,190,25,25)
        image(goatObj[0][0],350,230,25,25)
        image(pigObj[0][0], 380,230,25,25)
        image(sheepObj[0][0],410,230, 25,25)
        
        let bunnyDis = dist(mouseX,mouseY,350,190)
        let chickenDis = dist(mouseX,mouseY,380,190)
        let cowDis = dist(mouseX,mouseY,410,190) 
        let goatDis = dist(mouseX,mouseY,350,230)
        let pigDis = dist(mouseX,mouseY,380,230)
        let sheepDis = dist(mouseX,mouseY,410,230)

        //text("isClicked: " + isClicked, 50,50)
        //text("bunny is Clicked: " + bunnyIsClicked, 50,70)

        //bunny
        if(bunnyDis < 25  && mouseIsPressed){
            //text( bunnyDis, 230,30)
           bunny_noise.play()
            if(isClicked == false && bunnyIsClicked == false){
                isClicked = true 
                bunnyIsClicked = true
            }
        }

        if(isClicked === true && bunnyIsClicked === true){
            price.display()
            price.btn()
            //ellipse(price.x + 10,price.y + 10,10,10)
            if(mouseIsPressed){
               
                if(dist(mouseX,mouseY,price.x + 10, price.y + 10) < 20){
                    isClicked = false
                    bunnyIsClicked = false
                }
            }
        }

        //process chicken
        if(chickenDis < 25 && mouseIsPressed){
            chicken_noise.play()
            if(isClicked == false && chickenIsClicked == false){
                isClicked = true 
                chickenIsClicked = true
            }

        }

        if(isClicked === true && chickenIsClicked === true){
            price.display()
            price.btn()
            //ellipse(price.x + 10,price.y + 10,10,10)
            if(mouseIsPressed){
               
                if(dist(mouseX,mouseY,price.x + 10, price.y + 10) < 20){
                    isClicked = false
                    chickenIsClicked = false
                }
            }
        }

        //process cow
        if(cowDis < 25 && mouseIsPressed){
            cow_noise.play()
            if(isClicked == false && cowIsClicked == false){
                isClicked =  true
                cowIsClicked = true
            }

        }

        if(isClicked === true && cowIsClicked === true){
            price2.display()
            price2.btn()
            if(mouseIsPressed){
                if(dist(mouseX, mouseY, price2.x + 10, price2.y + 10 ) < 20){
                    isClicked = false
                    cowIsClicked = false
                }
            }
        }

        //process goat
        if(goatDis < 25 && mouseIsPressed){
            goat_noise.play()
            if(isClicked == false && goatIsClicked == false){
                
                isClicked =  true
                goatIsClicked = true
            }
        }

        if(isClicked === true && goatIsClicked === true){
            price2.display()
            price2.btn()
            if(mouseIsPressed){
                if(dist(mouseX, mouseY, price2.x + 10, price2.y + 10 ) < 20){
                    isClicked = false
                    goatIsClicked = false
                }
            }
        }

        //process pig
        if(pigDis < 25 && mouseIsPressed){
            pig_noise.play()
            if(isClicked == false && pigIsClicked == false){
                isClicked =  true
                pigIsClicked = true
            }
        }

        if(isClicked === true && pigIsClicked === true){
            price3.display()
            price3.btn()
            if(mouseIsPressed){
                if(dist(mouseX, mouseY, price3.x + 10, price3.y + 10 ) < 20){
                    isClicked = false
                    pigIsClicked = false
                }
            }
        }

         //process sheep
         if(sheepDis < 25 && mouseIsPressed){
            sheep_noise.play()
            if(isClicked == false && sheepIsClicked == false){
                isClicked =  true
                sheepIsClicked = true
            }
        }

        if(isClicked === true && sheepIsClicked === true){
            price3.display()
            price3.btn()
            if(mouseIsPressed){
                if(dist(mouseX, mouseY, price3.x + 10, price3.y + 10 ) < 20){
                    isClicked = false
                    sheepIsClicked = false
                }
            }
        }

    }

    
}

function drawLevel(level){
    for(let x = 0; x < level.length; x ++ ){
        for (let y = 0; y < level[0].length; y++){
            drawTile(level[x][y], y * TILESIZE, x * TILESIZE )
        }
    }

}

function drawTile(tileID,screenX,screenY){
    let tilesPerRow = farm.width / TILESIZE
    let left = int(tileID % tilesPerRow) * TILESIZE
    let top = int(tileID / tilesPerRow) * TILESIZE

    image(farm,screenX,screenY,TILESIZE,TILESIZE,left,top,TILESIZE,TILESIZE)

}


//detecting collison
/* game state 0 */
function isEdge(id){
    
    if(id === 1036 || id  === 1185 || id === 1038 || id === 889){
        return true
    }
    return false
}

function isMarket(id){
    if(id === 9236 || id === 9237 || id === 9238 || id === 9239 
        || id === 9240 || id === 9241 || id === 9389 || id === 9537 
        || id === 9685 || id === 9833 ||id === 9832 || id === 9831
        || id === 9830 || id === 9829 || id === 9828 || id === 9680
        || id === 9532 || id === 9384 || id === 9236 ){
        return true
    }
    return false
}

function isStudyRoom(id){
    if(id === 3855 ){
        return true
    }
    return false
}

function isFarm(id){
    if(id === 4444 || id === 4297 || id === 4446 || id === 4593){
        return true
    }
    return false
}

function isAnimalShop(id){
    if(id === 4740 ||  id === 4890 || id === 4888 || id === 5039){
        return true
    }
    return false
}

function isStudyRoomDoor(id){
    if(id === 942 || id === 943 || id === 944 || id === 945){
        return true
    }
    return false
}

function isMarketDoor(id){
    //9830,9831
    if(id === 9830 || id === 9831){
        return true
    }
    return false

}

/* game state 3 Study */
function isWalkable(id){
    // 1044  1193 1938 1939 1926
    if( id === 1044 || id == 1193 || id == 1938 || id == 1939 || id == 1926 ){
        return true
    }
    return false
}

function isWater(id){
    if (id === 1936){
        return true
    }
    return false
}


//study area
function isStudyArea(id){
    if(id === 1939){
        return true
    }
    return false
}

// given an x and y position, determine what tile is here
// do this by first converting x & y position into array positions
// then peek into the array at that position to identify the tile ID
function getTile(x,y,level) {
    x = int(x/TILESIZE);
    y = int(y/TILESIZE);
    console.log("tile at ", x, y, "is", level[y][x]);
    return level[y][x];
}

function transition(x,y,level){
    //let id2 = getTile(cat.middleX + 15, cat.sensorTop + 15, level2)
    let id2 = getTile(x,y,level)
    if(isStudyRoomDoor(id2)){
        return "studyRoom"
    }
    if(isMarketDoor(id2)){
        return "marketPl"
    }
    return "invalid"

}

function changeMusic(){
    if(gameState === 2){
        
    }
}



function submitMins(){
    value = int(inp.value()) * 60
    ogValue = inp.value()
    inp.value("")

}

function mousePressed() {
    isMouseClicked = true;

  }
  
function mouseReleased() {
    if (isMouseClicked && bunnyIsClicked) {
        if(focusPoints >= price.points){
            if(dist(mouseX,mouseY,price.x + 10, price.y + 75) < 30){
               myFarmAnimals.push(new Sprite(bunny))
                focusPoints -= price.points
            }
        }
    }

    if (isMouseClicked && chickenIsClicked) {
        if(focusPoints >= price.points){
            if(dist(mouseX,mouseY,price.x + 10, price.y + 75) < 30){
                myFarmAnimals.push(new Sprite(chicken))
                focusPoints -= price.points
            }
        }
    }

    if (isMouseClicked && cowIsClicked ){
        if(focusPoints >= price2.points){
            if(dist(mouseX, mouseY, price2.x + 10, price2.y + 75) < 30){
                myFarmAnimals.push(new Sprite(cow))
                focusPoints -= price2.points
            }
        }
    }

    if (isMouseClicked && goatIsClicked){
        if(focusPoints >= price2.points){
            if(dist(mouseX, mouseY, price2.x + 10, price2.y + 75) < 30){
                myFarmAnimals.push(new Sprite(goat))
                focusPoints -= price2.points
            }
        }
    }

    if( isMouseClicked && pigIsClicked){
        if(focusPoints >= price3.points){
            if(dist(mouseX, mouseY, price3.x + 10, price3.y + 75) < 30){
                myFarmAnimals.push(new Sprite(pig))
                focusPoints -= price3.points
            }
        }
    }

    if( isMouseClicked && sheepIsClicked){
        if(focusPoints >= price3.points){
            if(dist(mouseX, mouseY, price3.x + 10, price3.y + 75) < 30){
                myFarmAnimals.push(new Sprite(sheep))
                focusPoints -= price3.points
            }
        }
    }

    
    isMouseClicked = false;
}
  
function keyPressed(){
    if(gameState == 2){
        if(key === "q"){
            gameState = 0
            cat.x = 10
        }
    }
}







